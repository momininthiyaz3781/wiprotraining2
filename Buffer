package com.iobasics;
 
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
 
public class BufferedFileWritingExample {
    public static void main(String[] args) {
        BufferedWriter writer = null;
        try {
            writer = new BufferedWriter(new FileWriter("example1.txt"));
            writer.write("Hello, World!");
            writer.newLine();
            writer.write("This is a new line.");
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (writer != null) {
                    writer.close();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
}

............................................................................................................
package com.iobasics;
 
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
 
public class BufferedFileReadingExample {
    public static void main(String[] args) {
        BufferedReader reader = null;
        try {
            reader = new BufferedReader(new FileReader("example1.txt"));
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
}


...................................................................................................................................................
PrintWriter class
 
package com.javaio;
//Byte Stream Example
//Reading from a File using FileInputStream:
import java.io.FileInputStream;
import java.io.IOException;
 
public class ByteStreamExample { // To read
    public static void main(String[] args) {
        try (FileInputStream inputStream = new FileInputStream("example.txt")) {
            int data;
            while ((data = inputStream.read()) != -1) {
                System.out.print((char) data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

............................................................................................................
package com.javaio;
//Byte Stream Example
//Writing to a File using FileOutputStream:
import java.io.FileOutputStream;
import java.io.IOException;
 
public class ByteStreamExample2 {// To Write
    public static void main(String[] args) {
        try (FileOutputStream outputStream = new FileOutputStream("example.txt")) {
            String text = "Hello, World!";
            outputStream.write(text.getBytes());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
 
transient
String uname="Maria";   
transient String pwd="aaaaa";
 ...................................................................................
package com.javaio;
//Write
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
 
class Person implements Serializable {
    private static final long serialVersionUID = 1L;
    private String name;
    private int age;
 
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
 
    @Override
    public String toString() {
        return "Person{name='" + name + "', age=" + age + '}';
    }
}
 
public class SerializationExample {
    public static void main(String[] args) {
        Person person = new Person("John Doe", 30);
 
        try (FileOutputStream fileOut = new FileOutputStream("person.ser");
             ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
            out.writeObject(person);
            System.out.println("Serialized data is saved in person.ser");
        } catch (IOException i) {
            i.printStackTrace();
        }
    }
}
 ............................................................................
package com.javaio;
//Read
 
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
 
public class DeserializationExample {
    public static void main(String[] args) {
        Person person = null;
 
        try (FileInputStream fileIn = new FileInputStream("person.ser");
             ObjectInputStream in = new ObjectInputStream(fileIn)) {
            person = (Person) in.readObject();
        } catch (IOException i) {
            i.printStackTrace();
        } catch (ClassNotFoundException c) {
            System.out.println("Person class not found");
            c.printStackTrace();
        }
 
        System.out.println("Deserialized Person...");
        System.out.println(person);
    }
}
................................................................................................................................ 
Task 2: Serialization and Deserialization
Serialize a custom object to a file and then deserialize it back to recover the object state.

 
